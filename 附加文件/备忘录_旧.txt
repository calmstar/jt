


用户权限
jt_user  :  id email(账号)  pwd   name  status  rgdate   role_id   telphone  course_ids(可为多个，用逗号隔开，管理员为空)   last_ip  last_time 

jt_stu   : id xuehao pwd  name college  class  major  telphone  email(补充资料)  status  last_ip  last_lgdate

jt_role	     : id  name  auth_ids（操作权限ID集合1,2,5）  auth_ac(控制器-操作方法)
jt_authority ：id  name  pid  auth_c  auth_a  auth_path  auth_level



其他信息
jt_course  : id   name  rgdate

jt_announce : id     content   pubdate   puber(管理员 or 教师名称) top（1为置顶，0为不置顶）



试卷基本信息表
jt_paper_baisc :  id  course_id  name   maker_id（默认为当前登录的教师，若是管理员就可下拉选（该course_id的所有老师），存id）   
		create_date  review_status(是否审核)  limittime     startdate   enddate  		

		
单选题中等难度 简单难度  困难难度  各多少道有的选
jt_paper_ques : id  paper_id  whole_score（填入） 
		sin_score  sin_easy_num   sin_com_num  sin_diff_num   
		dou_score  dou_easy_num   dou_com_num  dou_diff_num   
		jud_score  jud_easy_num   jud_com_num  jud_diff_num   
		sub_score  sub_easy_num   sub_com_num  sub_diff_num   


jt_paper_limit: id 	paper_id	limit_class（限制班级）
					limit_stu_status(限制学生，必须导入名单，为1就代表限制)	    
					limit_ques_status(限制的出题范围的状态)（若是0就为不限制，1就为限制并另起一个表记录各类型题目 id）
 		
jt_paper_limit_ques: id   paper_id   limit_sin   limit_dou   limit_jud    limit_sub 
		（某个类型题若是想 让范围为全部题目 ，则自行全选，总之所选题目不能少于其对应填的题目数量）

jt_paper_limit_stu: id   paper_id   limit_xh  stu_name




学生

（每人不同题目）（最终考生的所要考的题目都在此，后面的改分和遍历答案都是根据此顺序。）
jt_stu_paper:  stu_id   paper_id   single_ids   double_ids    judge_ids  subj_ids  

	 
jt_stu_answ: stu_id  paper_id   sin_answ  dou_answ  jud_answ  subj_answ      mark_status(批改状态)   stime  etime
 
		(三个客观题的答案按 jt_pq_random 中题目id的顺序进行存放，遍历考生答案按顺序即可，（记得填充）（出试题必须无序，遍历答案可以有序） ) 
 

jt_stu_score: stu_id  	paper_id(对应着唯一的试卷)    all_score   single_score    double_score    judge_score  subj_score（弄成字符串形式存储，可直接打印每一道的主观题的分数。）	 
	（以上两表可进行合并）（联合主键）



试题表：
jt_ques_single :  id  course_id  descr  op1  is_op1   o2  is_op2    op3    is_op3    op4   is_op4   is_show  difficulty
jt_ques_double  :  id  course_id  descr  op1  is_op1   o2  is_op2    op3    is_op3    op4   is_op4   is_show  difficulty
jt_ques_judge  :  id  course_id  descr  is_true  is_false   is_show  difficulty
jt_ques_subj   :  id  course_id  descr  right_answ. difficulty


----------------------------------------------------------------------------------------------------------------------------------------------


//可能待完善的：	
	

	10 找个时间把控制器一个个对一下，看看有没有漏了控制器的方法，不在权限列表里的（除了Access中规定的白名单控制器方法）
	
	//将课程名字 和角色名 设置为唯一验证；   将jt_paper_xxx 中的外键 paper_id 设置为唯一( 除了jt_paper_limit_stu的paper_id )   	

	

	-----------------------------

要注意：



	限制在showlist add和edit下拉列表 和  导入题目中（题目所属课程验证是否 符合 和教师所任课程），出试题的下拉列表中。
	所以就算教师出的一份试卷，后来被剥夺了 该课程 的任课权限，该试卷还是会出现在教师页面里。只是以后该教师再也不能出该课程的试卷了。
	


	21 防止刷新又重新生成一份随机试卷  通过jt_stu_paper 中条件stu_id 和 paper_id 查询出来的记录有无 来判断
	22 防止考生提交成功后，又返回重新重复提交，通过 jt_stu_score 中条件stu_id 和 paper_id 查询出来的记录有无 来判断
	23 判断当前学生是否考过本试卷，通过 jt_stu_score 中条件stu_id 和 paper_id 查询出来的记录有无 来判断
	24 判断当前学生提交时间是否超过规定时间，通过 stime + limittime
	
	

	情景①  当一个考生超过时间后，点击提交：提交失败-- ① 程序 将考生记录add进stu_score，然后显示‘无法提交试卷，已超时提交’，再点击刷新显示‘无法重复提交试卷’。

	情景②  当一个考生超过时间后，忘记点击提交，许久到回来---点击试卷 ：进入失败--重复情景① 
		（若是一直没有来，就会出现缺考的现象。缺考（未交卷考生判断）：对比stu_score表和stu_answ表，少了一条谁的记录就谁只进来看了试卷而为交卷  ）
		
	（弄个js，判断大于限制时间后自动交卷，会跟后端的验证冲突吗？不会，先执行了后端验证最后才display。）

	（由于 是否考过本试卷的依据是stu_score表记录的有无， 所以不能刚进试卷页面 就把stu_score表给add进记录）

	原则，做这个界面基于原有功能的验证。post方法那里，就专门做post提交的逻辑验证。



	23 倒计时通过 stime 来生成
	24 最后剩余stu_score中mark_status和subj_score没有操作(还有关联的all_score需要修改)，放到后台进行修改操作

	25 考生进入试卷页面要 add进stu_paper表 和 stu_answ表部分字段 
	26 考生提交试卷要 save stu_answ表剩余字段 和 add stu_score表部分字段  事务回滚。。。

	27 stu_answ  stu_paper   stu_score  一个考生一条记录，相互补充对应
	28 paper_basic中的记录条数等于 paper_ques_fixed 加上 paper_ques_random 的记录；
	   paper_basic中的记录条数等于 paper_limit中记录条数。
	
	29 未在规定时间内提交的数据表记录为空；在规定时间内提交，但是没有填写的为x。
	

	28 stu 0为启用，1为不启用；user 0为不启用，1为启用，需要注意

	
	
	6 把客观题的分数也可以表示出来。
	20 //主观题三种状态判断，
			//mark_status为0时要么未批改，要么没有这种题，为1时说明有且批改了，直接显示分数
			// 显示未批改 都是根据 marking_status来判断的

	21 当题库数量不足时，（针对于随机出卷），考生进入考试页面前会出现 ‘试题数量不足，请与管理员联系’字样，然后其他有关学生的试题答卷表都不会被存入。
		随机出卷的过程中，若是填的数量过多 ，而题库中没有那么多的题目，则会出卷失败，出卷者必须重新出卷。
		（考生进入考试页面也会有判断数量是否足够，是为了防止出完试卷后，题库中的题目被误删掉了。）


	22 医学院和梅师分院还不能被作为限制对象，梅师和医学院暂时只能参加没有限制对象的试卷。

	//随机题目筛选要求：①符合所选课程题目 ② 属性为‘没有在练习题中展示’  ③ 各难度的题目数量 和 所填符合
	// 指定出卷：	① 自动列出了符合所选课程题目   ② 不论是否展现在练习题中的 试题都会被列出来。  ③ 难度对应的题目数量由出题者自己选择



	有编辑器的  
	   后台中： 
		（列表展示	加上 截断（四种类型题里已使用css截断，公告中使用mb_substr截断） 去标签 还有htmlspecialchars_decode即
				【{$v.content|htmlspecialchars_decode|strip_tags|mb_substr=0,30,'utf-8'}】），			   	
		（编辑中直接输出）
		
	   前台中：全部原先有编辑器输入的加上 htmlspecialchars_decode 即可，（由于太多标签难改，所以暂且使用了strip_tags，为了保持样式先）
		以上可在后台输出中更改，也可以在前台页面用函数更改（普通表格在页面修改了，bootstrapTable在输出中修改了。）


    后台：
	批改的主观题题目只展示未批改的，已批改的主观题不展示。

	题库管理和试卷模块所有都已加上 管理员 和 教师角色 分开查询数据

	后台对于URL中id的检测：（在 批改主观题 和 试卷分析的查看试卷 中）
		管理员不检测（能输入任何id），教师检测其 查看或批改试卷的权限 仅为其出的试卷

	由于大部分都是按钮（无法打开新窗口篡改id），没有id可看，所以没有进行检验id。

	各个教师之间：试题通过course_id（教师担任的课程id）锁定权限，试卷通过maker_id（教师自身id）锁定权限

   前台 ：新窗口的URL均已验证

	
	//后台已把试卷里的考生答案做好本地缓存cookie，每隔十秒保存考生答案，缓存cookie生存时间为24小时
	已改成使用数据表stu_answ_cache来暂存学生答案，注意不要双开浏览器，否则保存的答案会被另外一个浏览器更新。


--------------------
<link href="__ADMIN__/css/style.css?v=4.1.0" rel="stylesheet">  这个会把导航条的某些原生效果重置掉

<td>{$v.content|htmlspecialchars_decode|strip_tags|mb_substr=0,30,'utf-8'}</td> 

	
	
	


